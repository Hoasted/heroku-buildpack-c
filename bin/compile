#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

cd $BUILD_DIR

# APT_CACHE_DIR="$CACHE_DIR/apt/cache"
# APT_STATE_DIR="$CACHE_DIR/apt/state"

# mkdir -p "$APT_CACHE_DIR/archives/partial"
# mkdir -p "$APT_STATE_DIR/lists/partial"

# APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

# apt-get $APT_OPTIONS update | indent

# apt-get $APT_OPTIONS -y --force-yes -d install --reinstall libldns1 libldns-dev libunbound-dev libexpat1-dev libexpat1 libidn11 libidn11-dev | indent
# for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
# 	dpkg -x $DEB $BUILD_DIR/.apt/
# done
#apt-get $APT_OPTIONS -y install libldns-dev libunbound-dev 2>&1 | indent
#dpkg-query -l | grep "ldns" 2>&1 | indent
# configure
if [ -f configure ]; then
  echo "-----> Autoreconf"
  # autoreconf --install 2>&1 | indent
  echo "-----> Configuring"
  ./configure --with-trust-anchor=./getdns-root.key  --docdir=/tmp --includedir=/tmp 2>&1 | indent
fi

# make
echo "-----> Compiling with Make"
make && make install  2>&1 | indent
